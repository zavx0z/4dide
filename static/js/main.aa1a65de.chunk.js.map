{"version":3,"sources":["models/titleModel.js","models/worldModel.js","models/supervisorModel.js","models/universeModel.js","stores/atomStore.js","data/atoms.js","stores/supervisorStore.js","actions/bigBoomAction.js","actions/universeActions.js","stores/universeStore.js","Space.jsx","theme/fonts/Roboto-Regular.ttf","components/Name.jsx","components/Atom.jsx","actions/atomActions.js","Universe.jsx","components/World.jsx","containers/Worlds.jsx","Supervisor.jsx","actions/supervisorActions.js","App.jsx","index.jsx"],"names":["title","types","model","views","self","scale","size","level","active","getParent","worlds","compose","name","child","array","late","path","local","volatile","position","Vector3","expanded","hover","actions","setActive","bool","setExpanded","setLevel","setLocal","setPath","setPosition","x","y","z","setHover","e","stopPropagation","handleClick","percent","getRoot","maxLevel","blue","toFixed","red","parseInt","ready","animated","setAnimate","getVisibleHeight","camera","depth","cameraOffset","vFOV","MathUtils","degToRad","fov","Math","tan","abs","getVisibleWidth","this","aspect","computeDepth","universeModel","worldModel","atoms","string","supervisor","supervisorModel","space","toggleReady","console","log","extract","atomPath","resolvePath","getFastAtom","idx","indexOf","pathUp","getPath","atom","getRelativePath","atomStore","atomModel","create","supervisorStore","normalizePath","toLowerCase","replace","createWorld","world","parentLevel","localCount","parentPath","encodeURIComponent","push","length","childLocal","forEach","item","fastElement","_expand","parentPosition","universeStore","updatePositionsAction","expandParent","parent","setExpand","bigBoomAction","addMiddleware","call","next","args","context","fullHeight","extremePointUp","fastAtom","worldFullHeight","visibleWidth","worldCenterWithChild","styles","height","backgroundColor","Space","children","style","shadowMap","invalidateFrameloop","onCreated","Stars","radius","factor","fade","universe","readyTransform","useThree","useState","sync","setSync","ref","useUpdate","text","fromArray","geometry","computeBoundingBox","boundingBox","max","min","width","fullWidth","busy","emptyWidth","split","maxWidth","k","Text","anchorX","textAlign","anchorY","color","font","SourceCodePro","onSync","Atom","observer","nav","useNavigate","useRef","useFrame","lerp","move","current","receiveShadow","castShadow","onPointerOver","onPointerOut","onClick","process","sizeGeometry","detail","emissive","opacity","transparent","wireframe","emissiveIntensity","titleVisible","titleScale","titlePosition","Universe","inject","map","useEffect","invalidate","Worlds","basename","routes","key","viewsGenerator","element","generator","setDefaultCamera","onStart","onStop","distanceToSquared","lookAt","supervisorMove","store","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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,CAACD,KAAM,uHACP,CAACA,KAAM,8HACP,CAACA,KAAM,qDACP,CAACA,KAAM,kEAEZ,CACCA,KAAM,yDACNC,MAAO,CACH,CAACD,KAAM,0DACP,CAACA,KAAM,mFACP,CAACA,KAAM,2GACP,CAACA,KAAM,iHACP,CAACA,KAAM,2GACP,CAACA,KAAM,qGACP,CAACA,KAAM,mIACP,CAACA,KAAM,6HACP,CAACA,KAAM,8EAEZ,CACCA,KAAM,2EACNC,MAAO,CACH,CAACD,KAAM,2IACP,CAACA,KAAM,iHACP,CAACA,KAAM,0IACP,CAACA,KAAM,mFACP,CAACA,KAAM,yIACP,CAACA,KAAM,iEACP,CAACA,KAAM,kDACP,CAACA,KAAM,gNACP,CAACA,KAAM,2KACP,CAACA,KAAM,wIACP,CAACA,KAAM,oJACP,CAACA,KAAM,sKACP,CAACA,KAAM,yKACP,CAACA,KAAM,yGACP,CAACA,KAAM,yGACP,CAACA,KAAM,gLACP,CAACA,KAAM,uIACP,CAACA,KAAM,wLACP,CAACA,KAAM,kPACP,CAACA,KAAM,qGACP,CAACA,KAAM,gJACP,CAACA,KAAM,+BACP,CAACA,KAAM,wLACP,CAACA,KAAM,qHACP,CAACA,KAAM,mGACP,CAACA,KAAM,mGACP,CAACA,KAAM,qLACP,CAACA,KAAM,8IACP,CAACA,KAAM,kMACP,CAACA,KAAM,0QACP,CAACA,KAAM,mFACP,CAACA,KAAM,6IACP,CAACA,KAAM,+FACP,CAACA,KAAM,iHACP,CAACA,KAAM,uHACP,CAACA,KAAM,qIACP,CAACA,KAAM,6GACP,CAACA,KAAM,6HACP,CAACA,KAAM,0IACP,CAACA,KAAM,+PACP,CAACA,KAAM,0LACP,CAACA,KAAM,4HAEZ,CACCA,KAAM,2EACNC,MAAO,CACH,CAACD,KAAM,0QACP,CAACA,KAAM,6IACP,CAACA,KAAM,uGACP,CAACA,KAAM,0IACP,CAACA,KAAM,+PACP,CAACA,KAAM,0OAEZ,CACCA,KAAM,uCACNC,MAAO,CACH,CAACD,KAAM,4EACP,CAACA,KAAM,yFACP,CAACA,KAAM,kFACP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","file":"static/js/main.aa1a65de.chunk.js","sourcesContent":["import {getParent, types} from \"mobx-state-tree\"\n\nconst title = types\n    .model({})\n    .views(self => ({\n        get titleScale() {\n            const {size} = self\n            const scale = size * 2\n            return [scale, scale, scale]\n        },\n        get titlePosition() {\n            const {size} = self\n            return [-(size / 2) - 0.04, (size / 2), size / 2]\n        },\n        get titleVisible() {\n            const {level, active} = self\n            if (level === 1) {\n                return active\n            } else {\n                const parent = getParent(self, 2)\n                return parent.active || active\n            }\n        },\n    }))\nexport default title","import {getRoot, types} from \"mobx-state-tree\"\nimport {Vector3} from \"three\"\nimport title from \"./titleModel\"\n\nconst worlds = types.compose(types\n    .model({\n        name: '',\n        child: types.array(types.late(() => worlds)),\n        path: '',\n        level: 0,\n        local: 0,\n    })\n    .volatile(self => ({\n        position: new Vector3(0, 0, 0),\n        expanded: false,\n        active: false,\n        hover: false,\n    }))\n    .actions(self => ({\n        setActive(bool) {\n            self.active = bool\n        },\n        setExpanded(bool) {\n            self.expanded = bool\n        },\n        setLevel(level) {\n            self.level = level\n        },\n        setLocal(local) {\n            self.local = local\n        },\n        setPath(path) {\n            self.path = path\n        },\n        setPosition(x, y, z) {\n            self.position = new Vector3(x, y, z)\n        },\n        setHover(e, bool) {\n            e.stopPropagation()\n            self.hover = bool\n        },\n        handleClick() {\n        },\n    }))\n    .views(self => ({\n        get color() {\n            const percent = 100 / getRoot(self).maxLevel\n            const blue = self['level'] * percent.toFixed(0)\n            const red = parseInt(255 - self['level'] * percent)\n            return `rgb(${blue}, ${blue}, ${red})%)`\n        },\n        get size() {\n            return 1 / self['level']\n        },\n        get title() {\n            return self.name\n        },\n        get ready() {\n            return getRoot(self).ready\n        },\n        get sizeGeometry() {\n            const {size} = self\n            return size\n        },\n        get detail() {\n            return 4\n        }\n        // get jsonPath() {\n        //     return getRelativePath(getRoot(self).worlds, self)\n        // }\n    })), title\n)\n\n\nexport default worlds","import {getRoot, types} from \"mobx-state-tree\"\nimport {MathUtils, Vector3} from \"three\"\n\nexport default types\n    .model({})\n    .volatile(self => ({\n        position: new Vector3(0, 0, 10),\n        animated: false\n    }))\n    .actions(self => ({\n        setAnimate(bool) {\n            self.animated = bool\n        },\n        setPosition(x, y, z) {\n            self.position = new Vector3(x, y, z)\n        },\n        getVisibleHeight(camera, depth) {\n            const cameraOffset = camera.position.z\n            if (depth < cameraOffset) depth -= cameraOffset\n            else depth += cameraOffset\n            const vFOV = MathUtils.degToRad(camera.fov)\n            return 2 * Math.tan(vFOV * 0.5) * Math.abs(depth)\n        },\n        getVisibleWidth(camera, depth) {\n            return this.getVisibleHeight(camera, depth) * camera.aspect\n        },\n        computeDepth(fov, size) {\n            return size / 2 / Math.tan(MathUtils.degToRad(fov) * 0.5)\n        }\n    }))\n    .views(self => ({\n        get ready() {\n            return getRoot(self).ready\n        }\n    }))","import worldModel from \"./worldModel\"\nimport {getRelativePath, resolvePath, types} from \"mobx-state-tree\"\nimport supervisorModel from \"./supervisorModel\"\n\nconst universeModel = types\n    .model({\n        worlds: worldModel,\n        atoms: types.array(types.string),\n        supervisor: supervisorModel,\n        maxLevel: 0,\n        space: 0.04\n    })\n    .volatile(self => ({\n        expanded: false,\n        ready: false,\n    }))\n    .actions(self => ({\n        toggleReady() {\n            console.log('ready')\n            self.ready = true\n        },\n        extract(atomPath) {\n            return resolvePath(self['worlds'], atomPath)\n        },\n        getFastAtom(path) {\n            const {atoms} = self\n            const idx = atoms.indexOf(path)\n            const pathUp = atoms[idx - 1]\n            return this.extract(pathUp)\n        },\n        getPath(atom) {\n            return getRelativePath(self['worlds'], atom)\n        },\n    }))\n    .views(self => ({\n    }))\nexport default universeModel","import atomModel from \"../models/worldModel\"\nimport atoms from \"../data/atoms\"\n\nconst atomStore = atomModel.create(atoms)\n\nexport default atomStore","export default {\n    name: '4DIDE',\n    child: [\n        {\n            name: 'Информация',\n            child: [\n                {name: 'Правила безопасности'},\n                {name: 'Работа с документацией'},\n                {name: 'Тип шилда'},\n                {name: 'Сертификат'},\n            ]\n        }, {\n            name: 'Установка',\n            child: [\n                {name: \"Закладные\"},\n                {name: 'План установки'},\n                {name: 'Технические данные'},\n                {name: 'Фрейзерный механизм'},\n                {name: 'Назначение деталей'},\n                {name: 'Крепление деталей'},\n                {name: 'Операторский компьютер'},\n                {name: 'Резервное копирование'},\n                {name: 'Сервоприводы'},\n            ]\n        }, {\n            name: 'Эксплуатация',\n            child: [\n                {name: 'Выключатели и значки ламп'},\n                {name: 'Программные клавиши'},\n                {name: 'База данных инструментов'},\n                {name: 'Список деталей'},\n                {name: 'Программное обеспечение'},\n                {name: 'Сбор данных'},\n                {name: 'Основы WoodWOP 4'},\n                {name: 'Фрезерование вертикальных карманов WoodWOP 4'},\n                {name: 'Фрезерование многоугольника WoodWOP 4'},\n                {name: 'Сверление по вертикали WoodWOP 4'},\n                {name: 'Сверление по горизонтали WoodWOP 4'},\n                {name: 'Пильные станки вертикальные WoodWOP 4'},\n                {name: 'Установите присоски на консоли'},\n                {name: 'Лазерный дисплей WoodWOP 4'},\n                {name: 'Больше вариантов WoodWOP 4'},\n                {name: 'Переменные / список переменных / WoodWOP 4'},\n                {name: 'Глобальные переменные WoodWOP 4'},\n                {name: 'Условия / математические функции WoodWOP'},\n                {name: 'Список обработки / список элементов контура WoodWOP 4'},\n                {name: 'Системы координат'},\n                {name: 'Включить подпрограммы ЧПУ'},\n                {name: 'NC-стоп'},\n                {name: 'Выбор графического инструмента WoodWOP 4'},\n                {name: 'Блокировать макрос WoodWOP 4'},\n                {name: 'Макрос процесса WoodWOP 4'},\n                {name: 'составная часть WoodWOP 4'},\n                {name: 'Основные настройки (строка меню) WoodWOP 4'},\n                {name: 'Полезные функции кнопок WoodWOP 4'},\n                {name: 'Выберите начальную и конечную точки'},\n                {name: 'Центральная смазка жидкой консистентной смазкой'},\n                {name: 'Базовая машина'},\n                {name: 'Поворотный привод для оси C'},\n                {name: 'Главный шпиндель'},\n                {name: 'Паспорт инструмента'},\n                {name: 'Портативный терминал'},\n                {name: 'Держатель инструмента HSK F63'},\n                {name: 'Паспорт держателя HSK F63'},\n                {name: 'Держатель инструмента'},\n                {name: 'Устройство смены пластин'},\n                {name: 'Блок охлаждения для шпинделя смены инструмента'},\n                {name: 'Интегрированный пильный механизм'},\n                {name: 'Вакуумный насос КВТ 3.100 / 3.140'},\n            ]\n        }, {\n            name: 'Обслуживание',\n            child: [\n                {name: 'Центральная смазка жидкой консистентной смазкой'},\n                {name: 'Поворотный привод для оси C'},\n                {name: 'Главный шпиндель HSK F63'},\n                {name: 'Устройство смены пластин'},\n                {name: 'Блок охлаждения для шпинделя смены инструмента'},\n                {name: 'Встроенный пильный механизм в направлении X'},\n            ]\n        }, {\n            name: 'Детали',\n            child: [\n                {name: 'Документация'},\n                {name: 'Основная машина'},\n                {name: 'Постобработка'},\n                {name: 'Инструменты'},\n            ]\n        }, {\n            name: 'Электрика',\n            child: [\n                {name: 'Электрика'},\n                {name: 'Электрика'},\n                {name: 'Электрика'},\n                {name: 'Электрика'},\n                {name: 'Электрика'},\n                {name: 'Электрика'},\n                {name: 'Электрика'},\n                {name: 'Электрика'},\n                {name: 'Электрика'},\n                {name: 'Электрика'},\n                {name: 'Электрика'},\n                {name: 'Электрика'},\n                {name: 'Электрика'},\n                {name: 'Электрика'},\n                {name: 'Электрика'},\n            ]\n        }, {\n            name: 'График обслуживания',\n            child: [\n                {name: 'Центральная смазка жидкой консистентной смазкой'},\n                {name: 'Поворотный привод для оси C'},\n                {name: 'Главный шпиндель HSK F63'},\n                {name: 'Устройство смены пластин'},\n                {name: 'Блок охлаждения'},\n                {name: 'Встроенный пильный механизм оси X'}\n            ]\n        },]\n}","import supervisorModel from \"../models/supervisorModel\"\n\nconst supervisorStore = supervisorModel.create({\n    position: [0, 0, 1000]\n})\n\nexport default supervisorStore","import {getPath} from \"mobx-state-tree\"\n\nconst normalizePath = (name) => name.toLowerCase().replace(/ /g, '_').replace(/\\//g, '-')\nlet atoms = []\nlet maxLevel = 0\n\nconst createWorld = (world, parentLevel, localCount, parentPath) => {\n    const path = typeof parentPath === \"undefined\" ? '/' : parentPath === '/' ? encodeURIComponent(normalizePath(world.name)) : parentPath + '/' + encodeURIComponent(normalizePath(world.name))\n    const level = typeof parentPath === \"undefined\" ? 1 : parentLevel\n    const local = typeof localCount === \"undefined\" ? 1 : localCount\n\n    atoms.push(getPath(world))\n    level > maxLevel && (maxLevel = level)\n\n    world.setLevel(level)\n    world.setLocal(local)\n    world.setPath(path)\n\n    if (world.child.length) {\n        let childLocal = 0\n        world.child.forEach(item => {\n            childLocal += 1\n            const itemLevel = level + 1\n            let selfLocal = childLocal\n            createWorld(item, itemLevel, selfLocal, path)\n        })\n    }\n}\nconst bigBoomAction = atomStore => {\n    createWorld(atomStore)\n    return {atoms: atoms, maxLevel: maxLevel}\n}\nexport default bigBoomAction","import universeStore from \"../stores/universeStore\"\nimport {getParent} from \"mobx-state-tree\"\n\n\nlet fastElement = null\nconst _expand = (world, parentPosition) => {\n    const {space} = universeStore\n    if (world.expanded) {\n        const y = fastElement.position.y - fastElement.size / 2 - world.size / 2\n        world.setPosition(0, y - space, 0)\n        fastElement = world\n    } else world.setPosition(parentPosition.x, parentPosition.y, parentPosition.z)\n\n    world.child.forEach(child => _expand(child, world.position))\n}\n\nexport const updatePositionsAction = () => {\n    const {worlds} = universeStore\n    worlds.setPosition(0, 0, 0)\n    fastElement = worlds\n    worlds.child.forEach(world => _expand(world, worlds.position))\n}\n\nconst expandParent = (world) => {\n    if (world.level === 1) {\n        world.setExpanded(true)\n    } else {\n        const parent = getParent(world, 2)\n        parent.child.forEach(item => item.setExpanded(true))\n        expandParent(parent)\n    }\n}\nexport const setExpand = (world) => {\n    expandParent(world)\n    world.child.forEach(world => world.setExpanded(true))\n}","import universeModel from \"../models/universeModel\"\nimport atomStore from \"./atomStore\"\nimport supervisorStore from \"./supervisorStore\"\nimport {addMiddleware} from \"mobx-state-tree\"\n\nimport bigBoomAction from \"../actions/bigBoomAction\"\nimport {setExpand, updatePositionsAction} from \"../actions/universeActions\"\n\nconst {atoms, maxLevel} = bigBoomAction(atomStore)\nconst universeStore = universeModel.create({\n    supervisor: supervisorStore,\n    worlds: atomStore,\n    atoms: atoms,\n    maxLevel: maxLevel,\n})\naddMiddleware(atomStore, (call, next) => {\n    const worldFullHeight = (world) => {\n        const {position, size, child} = world\n        if (child.length) {\n            const extremePointUp = position.y + size / 2\n            const fastAtom = child[child.length - 1]\n            const extremePointDown = Math.abs(fastAtom.position.y) + fastAtom.size / 2\n            return extremePointUp + extremePointDown\n        } else return size\n    }\n    const worldCenterWithChild = (world, fullHeight) => {\n        const {position, size} = world\n        const extremePointUp = Math.abs(position.y) - size / 2\n        return extremePointUp + fullHeight / 2\n    }\n    const {name, args, context} = call\n    switch (name) {\n        case 'setActive':\n            const active = args[0]\n            if (active) {\n                const camera = args[1]\n                setExpand(context)\n                updatePositionsAction()\n                const {child, size} = context\n                const fullHeight = worldFullHeight(context)\n                const visibleWidth = fullHeight * camera.aspect\n                const x = child.length ? (size * 0.5) - (visibleWidth * 0.5) : 0\n                const y = -worldCenterWithChild(context, fullHeight)\n                const z = supervisorStore.computeDepth(camera.fov, fullHeight) + size * 0.5\n                supervisorStore.setPosition(x, y, z)\n            } else {\n                context['child'].forEach(world => world.setExpanded(false))\n            }\n            break\n        default:\n            break\n    }\n\n    return next(call)\n})\nexport default universeStore","import React from 'react'\nimport {Provider} from \"mobx-react\"\nimport {Canvas} from \"react-three-fiber\"\nimport universeStore from \"./stores/universeStore\"\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport {Stars} from \"@react-three/drei\"\n\nconst styles = {height: \"100vh\", backgroundColor: \"black\"}\n\nexport const Space = ({children}) => {\n    return <>\n        <Canvas\n            style={styles}\n            shadowMap\n            invalidateFrameloop={true}\n            onCreated={() => universeStore.toggleReady()}\n        >\n            <Stars radius={100} factor={2} fade/>\n            <Router>\n                <Provider universe={universeStore}>\n                    {children}\n                </Provider>\n            </Router>\n        </Canvas>\n    </>\n}","export default __webpack_public_path__ + \"static/media/Roboto-Regular.03523cf5.ttf\";","import React, {useState} from \"react\"\nimport {Text} from \"@react-three/drei\"\nimport SourceCodePro from \"../theme/fonts/Roboto-Regular.ttf\"\nimport {useThree, useUpdate} from \"react-three-fiber\"\n\nexport default ({hover, readyTransform, world, position, scale, title, getVisibleWidth}) => {\n    const {camera} = useThree()\n    const [sync, setSync] = useState(null)\n    const ref = useUpdate(text => {\n        if (sync && readyTransform) {\n            text.scale.x !== scale[0] && text.scale.fromArray(scale)\n\n            text.geometry.computeBoundingBox()\n            const {max, min} = text.geometry.boundingBox\n            const width = max.x - min.x\n            const fullWidth = getVisibleWidth(camera, world.size / 2)\n            let busy = world.active ? world.size : world.size * 2 - (world.size * 1.5)\n            busy += 0.04\n            const emptyWidth = fullWidth - busy\n\n            // console.log(text.text, width, emptyWidth, busy)\n            if (emptyWidth - width < 0) {\n                if (title.split(' ').length > 1) {\n                    text.maxWidth = emptyWidth\n                } else {\n                    const k = emptyWidth / width\n                    text.scale.x = k\n                    text.scale.y = k\n                    text.scale.z = k\n                }\n            }\n        }\n    }, [readyTransform])\n    return <>\n        <Text\n            ref={ref}\n            anchorX={'right'}\n            textAlign={'right'}\n            anchorY={\"top\"}\n            position={position}\n            scale={scale}\n            color={hover ? \"#6476ec\" : \"#949494\"}\n            font={SourceCodePro}\n            // maxWidth={1}\n            onSync={setSync}\n        >\n            {title}\n        </Text>\n    </>\n}","import React, {useRef} from \"react\"\nimport ItemName from \"./Name\"\nimport {observer} from \"mobx-react\"\nimport {useFrame} from \"react-three-fiber\"\nimport {useNavigate} from \"react-router-dom\"\nimport {move} from \"../actions/atomActions\"\nimport {getRoot} from \"mobx-state-tree\"\n\nconst AtomMesh = ({world}) => {\n    const {animated, getVisibleWidth, computeDepth} = getRoot(world).supervisor\n    const nav = useNavigate()\n    const atom = useRef()\n    useFrame(() => move(atom.current, world.position))\n    const handleClick = (e) => {\n        e.stopPropagation()\n        world.active && world.level > 1 ? nav(-1) : nav(process.env.REACT_APP_BASE_PATH + '/' + world.path)\n    }\n    return <>\n        <mesh\n            ref={atom}\n            receiveShadow\n            castShadow\n            onPointerOver={(e) => world.setHover(e, true)}\n            onPointerOut={(e) => world.setHover(e, false)}\n            onClick={handleClick}\n\n        >\n            <icosahedronBufferGeometry args={[world.sizeGeometry / 2, world.detail]}/>\n            <meshLambertMaterial\n                emissive={world.color}\n                opacity={world.hover ? 0.4 : 0.98}\n                transparent={true}\n                wireframe\n                emissiveIntensity={1}\n            />\n            {world.titleVisible &&\n            <ItemName\n                world={world}\n                hover={world.hover}\n                scale={world.titleScale}\n                position={world.titlePosition}\n                title={world.title}\n                readyTransform={!animated}\n                getVisibleWidth={getVisibleWidth}\n                computeDepth={computeDepth}\n            />}\n        </mesh>\n    </>\n}\nexport const Atom = observer(AtomMesh)","\nexport const move = (atom, position) => {\n    // if (atom.position.distanceToSquared(position) > 0.0001) {\n        atom.position.lerp(position, 0.1)\n    // }\n}\n","import React from 'react'\nimport {inject, observer} from \"mobx-react\"\nimport {Atom} from \"./components/Atom\"\n\nconst Group = ({universe, children}) => {\n    return <>\n        <group name={'universe'}>\n            {universe.atoms.map(atom => <Atom key={atom} world={universe.extract(atom)}/>)}\n        </group>\n        {children}\n    </>\n}\nexport const Universe = inject('universe')(observer(Group))","import React, {useEffect} from \"react\"\nimport {observer} from \"mobx-react\"\nimport {invalidate, useThree} from \"react-three-fiber\"\n\nconst World = ({atom}) => {\n    const {camera} = useThree()\n    useEffect(() => {\n        if (atom.ready) {\n            atom.setActive(true, camera)\n            invalidate()\n        }\n        return () => atom.setActive(false)\n    }, [atom, atom.ready, camera])\n\n    return <></>\n}\nexport default observer(World)\n\n","import React from 'react'\nimport {Route} from \"react-router-dom\"\nimport World from \"../components/World\"\nimport {Routes} from \"react-router-dom\"\n\nexport const Worlds = ({worlds}) => {\n    const generator = (world) => {\n        const routes = []\n        let key = 0\n        const viewsGenerator = (item) => {\n            key += 1\n            routes.push(<Route key={key} path={item.path} element={<World atom={item}/>}/>)\n            item.child.map(item => viewsGenerator(item))\n        }\n        viewsGenerator(world)\n        return routes\n    }\n    return <Routes basename={process.env.REACT_APP_BASE_PATH}>{generator(worlds)}</Routes>\n}","import React from 'react'\nimport {inject, observer} from 'mobx-react'\nimport {supervisorMove} from \"./actions/supervisorActions\"\nimport {useFrame, useThree, useUpdate} from \"react-three-fiber\"\n\nconst Supervisor = ({children, universe: {supervisor}}) => {\n    const {setDefaultCamera} = useThree()\n\n    const ref = useUpdate((camera) => setDefaultCamera(camera), [])\n    useFrame(() => {\n        supervisorMove(ref.current, supervisor.position,\n            () => !supervisor.animated && supervisor.setAnimate(true),\n            () => supervisor.animated && supervisor.setAnimate(false))\n    })\n    return <>\n        <perspectiveCamera ref={ref} position={[0, 0, 10]}/>\n        {children}\n    </>\n}\n\nexport default inject('universe')(observer(Supervisor))\n","import {invalidate} from \"react-three-fiber\"\n\nexport const supervisorMove = (supervisor, position, onStart, onStop) => {\n    if (supervisor.position.distanceToSquared(position) > 0.0001) {\n        onStart()\n        supervisor.lookAt(supervisor.position.lerp(position, 0.1))\n        invalidate()\n    } else onStop()\n}\n","import React from 'react'\nimport {Space} from \"./Space\"\nimport {Universe} from \"./Universe\"\nimport {Worlds} from \"./containers/Worlds\"\nimport store from \"./stores/universeStore\"\nimport Supervisor from \"./Supervisor\"\n\nexport default () =>\n    <Space>\n        <Supervisor>\n            <Universe>\n                <Worlds worlds={store.worlds}/>\n            </Universe>\n        </Supervisor>\n    </Space>","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './theme/styles/index.css'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}