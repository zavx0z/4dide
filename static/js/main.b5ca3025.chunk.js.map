{"version":3,"sources":["components/Sphere.jsx","theme/Roboto-Regular.ttf","components/Name.jsx","containers/Item.jsx","components/Camera.jsx","views/Entity.jsx","components/Core.jsx","containers/Parent.jsx","controllers/AnimationController.jsx","App.jsx","theme/theme.jsx","utils/SnackbarUtils.tsx","layout/Canva.jsx","request/API.js","features/secure/request/api/api.js","features/secure/request/api/join.js","features/secure/request/api/loginFetch.js","features/secure/request/api/loginPassword.js","features/secure/request/utils/headerWithToken.js","features/secure/request/api/loginToken.js","features/secure/stores/userStore.js","features/secure/models/userModel.js","models/entity/animations/orbit.js","models/entity/animations/axis.js","models/entity/animations/animation.js","models/utils/arr.js","models/entity/parent/core.js","models/entity/parent/tor.js","models/entity/parent/parent.js","models/entity/touch.js","models/entity/name/name.js","models/entity/navigate.js","models/entity/views/scattering.js","models/entity/views/verticalTop.js","models/entity/entity.js","models/utils/v3.js","models/viewport/cameraModel.js","models/viewport/viewportModel.js","models/root.js","stores/entityStore.js","stores/viewportStore.js","stores/rootStore.js","index.jsx"],"names":["Sphere","scale","position","clickHandler","color","detail","name","useState","hovered","setHover","onPointerOver","e","stopPropagation","onPointerOut","onClick","args","emissive","wireframe","emissiveIntensity","observer","item","colorName","nameAnchorX","nameInitPosition","nameAnchorY","initName","Text","fontSize","textAlign","font","anchorX","anchorY","onSync","Item","init","mesh","useUpdate","nav","useNavigate","clickItem","handleClick","coreScale","level","touchZone","ref","blue","opacity","Name","inject","camera","root","viewport","useRef","setDefaultCamera","useThree","useEffect","current","fov","positionV3","rotationV3","rotation","Entity","speed","setWidth","core","setActive","playAxis","moveNameUp","stopAxis","setFly","moveNameToEntity","moveNameToCore","invalidate","useFrame","cameraPositionEqual","nameInitWidth","width","cameraV3","lookAt","lerp","Core","coreDetail","clickCore","orange","Parent","aline","children","active","toggleHover","torScale","torDetail","visible","side","DoubleSide","doubleSided","transparent","axisAnimate","rotateAxis","rotateOrbit","entity","Camera","Stars","radius","factor","fade","itemGenerator","child","id","map","basename","routesGenerator","Fragment","exact","path","fullPath","element","createMuiTheme","palette","type","primary","light","grey","main","dark","contrastText","secondary","text","InnerSnackbarUtilsConfigurator","props","setUseSnackbarRef","useSnackbar","useSnackbarRefProp","SnackbarUtilsConfigurator","Canva","style","height","pixelRatio","window","devicePixelRatio","invalidateFrameloop","process","this","API","data","fetch","api","join","headers","method","mode","body","JSON","stringify","then","response","json","res","error","Promise","reject","catch","login","base64","require","password","Headers","append","encode","loginFetch","token","localStorage","getItem","header","userModel","types","model","maybe","number","phone","string","preProcessSnapshot","snapshot","volatile","self","loading","actions","afterCreate","tokenStore","reLogin","setPhone","setPassword","toggleLoading","flow","loginPassword","user","expiration","applySnapshot","setToken","setExpiration","loginToken","console","log","logOut","removeToken","removeExpiration","setItem","removeItem","views","create","enumeration","fly","getRoot","setAline","bool","typeAline","toggleAline","scattering","verticalTop","distance","parentX","x","parentY","y","rootAline","Math","sin","cos","orbitRotate","alphaRotate","sibling","count","deg","length","MathUtils","degToRad","rootSpeed","three","aspect","tan","is_root","boundingBox","diameter","distanceCamera","distanceCameraVerticalTop","Vector3","visibleWidth","_axisAnimate","z","speedRotateAxis","animation","playAxisAllChild","forEach","getVisibleHeight","depth","cameraOffset","vFOV","abs","getVisibleWidth","percent","orient","toFixed","getParent","find","fixed","compose","orbitAnimation","axis","arrX","num","paddingSphere","getFullDiameter","core_item","diameters","getFullDiameterVerticalTop","size","parent","undefined","childR","touchDebug","setCurrentLevel","setPrevLevel","isTarget","event","target","intersections","filter","eventObject","directionBeforeEnter","nameScaleUpChild","clickTor","isExitFromItem","currentLevel","isExitFromSelf","isFold","nameInitHeight","geometry","max","min","setNameAnchorX","setNameAnchorY","namePositionRight","nameHeightMaxScale","name3d","scaleWidth","nameWidth","k","nameScalePositionChilds","start","Date","now","requestAnimationFrame","animate","timestamp","interval","computeBoundingBox","Infinity","prevLevel","parentPosition","parentRadius","childDiameters","parentOffset","scatteringDiametersSiblingUp","verticalTopDiametersSiblingUp","array","late","split","idxes","parseInt","verticalTopPosition","scatteringPosition","lastDigit","siblingId","substring","toString","tor","touch","navigate","setPosition","cameraModel","v3","Euler","float","viewportModel","brightness","incrementSpeed","decrementSpeed","toggleOrbitRotate","entityStore","viewportStore","rootStore","addMiddleware","call","next","context","ReactDOM","render","theme","anchorOrigin","vertical","horizontal","userStore","document","getElementById"],"mappings":"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","file":"static/js/main.b5ca3025.chunk.js","sourcesContent":["import React, {useState} from \"react\"\n\nexport const Sphere = ({scale, position, clickHandler, color, detail, name}) => {\n    const [hovered, setHover] = useState(false)\n    const handleOver = (e) => {\n        e.stopPropagation()\n        setHover(true)\n    }\n    const handleOut = (e) => {\n        e.stopPropagation()\n        setHover(false)\n    }\n    return <>\n        <mesh\n            onPointerOver={handleOver}\n            onPointerOut={handleOut}\n            onClick={clickHandler}\n            scale={scale}\n            position={position}\n            name={name}\n        >\n            <icosahedronBufferGeometry args={[0.5, detail]}/>\n            <meshLambertMaterial\n                emissive={hovered ? color[800] : color[900]}\n                wireframe\n                emissiveIntensity={1}\n            />\n        </mesh>\n    </>\n}","export default __webpack_public_path__ + \"static/media/Roboto-Regular.03523cf5.ttf\";","import {Text} from \"@react-three/drei\"\nimport React from \"react\"\nimport {observer} from \"mobx-react\"\nimport font from \"../theme/Roboto-Regular.ttf\"\n\nexport default observer(({item, clickHandler}) => {\n    const {colorName, nameAnchorX, nameInitPosition, nameAnchorY, initName} = item\n    return <Text\n        onClick={clickHandler}\n        fontSize={0.3}\n        textAlign={\"center\"}\n        font={font}\n        position={nameInitPosition}\n        color={colorName}\n        anchorX={nameAnchorX}\n        anchorY={nameAnchorY}\n        name={'nameText'}\n        onSync={initName}\n    >\n        {item.name}\n    </Text>\n})","import React from \"react\";\nimport {blue} from \"@material-ui/core/colors\";\nimport {useNavigate} from \"react-router-dom\"\nimport {useUpdate} from \"react-three-fiber\"\nimport {Sphere} from \"../components/Sphere\"\nimport {observer} from \"mobx-react\"\nimport Name from \"../components/Name\"\n\n\nexport const Item = observer(({item}) => {\n        const {init} = item\n        const mesh = useUpdate(mesh => init(mesh), [])\n\n        const nav = useNavigate()\n        const {clickItem} = item\n        const handleClick = (e) => clickItem(e, nav)\n\n        const {coreScale, level, touchZone} = item\n        return <>\n            <mesh ref={mesh}>\n                <Sphere\n                    name={'item'}\n                    color={blue}\n                    scale={[...coreScale]}\n                    detail={4 - level}\n                    clickHandler={handleClick}\n                    opacity={0.4}\n                    touchZone={touchZone}\n                />\n                <Name item={item} clickHandler={handleClick}/>\n            </mesh>\n        </>\n    }\n)","import * as React from 'react'\nimport {useThree} from 'react-three-fiber'\nimport {useEffect, useRef} from \"react\"\nimport {inject, observer} from \"mobx-react\"\n\n\nconst CameraController = ({root: {viewport: {camera}}}) => {\n    const ref = useRef()\n    const {setDefaultCamera} = useThree()\n    const {init} = camera\n    useEffect(() => {\n        if (typeof ref.current !== 'undefined') {\n            setDefaultCamera(ref.current)\n            init(ref.current)\n        }\n    }, [setDefaultCamera, init])\n    const {fov, positionV3, rotationV3} = camera\n    return <perspectiveCamera ref={ref}\n                              fov={fov}\n                              position={positionV3}\n                              rotation={rotationV3}\n    />\n}\nexport default inject('root')(observer(CameraController))","import React, {useEffect} from \"react\"\nimport {useFrame, useThree} from \"react-three-fiber\"\nimport {inject, observer} from \"mobx-react\"\n\nconst EntityPage = ({root: {speed, viewport: {setWidth}}, item}) => {\n    const {core, setActive, playAxis, moveNameUp, stopAxis, setFly, moveNameToEntity, moveNameToCore} = item\n    const {invalidate} = useThree()\n    useEffect(() => {\n        setFly(true)\n        setActive(true)\n        stopAxis()\n        invalidate()\n        return () => {\n            setFly(false)\n            setActive(false)\n            moveNameUp()\n            playAxis()\n        }\n    }, [invalidate, moveNameUp, playAxis, setActive, setFly, stopAxis])\n\n    useFrame(({camera, viewport, invalidate}) => {\n            const {cameraPositionEqual, nameInitWidth} = item\n            setWidth(viewport().width)\n            speed && invalidate()\n            if ((!cameraPositionEqual) && nameInitWidth) {\n                const {cameraV3} = item\n                camera.lookAt(camera.position.lerp(cameraV3, 0.1))\n                core ? moveNameToCore() : moveNameToEntity()\n                invalidate()\n            }\n            cameraPositionEqual && setFly(false)\n        }\n    )\n    return <></>\n}\nexport const Entity = inject(\"root\")(observer(EntityPage))\n\n","import {Sphere} from \"./Sphere\"\nimport orange from \"@material-ui/core/colors/orange\"\nimport React from \"react\"\nimport {useNavigate} from \"react-router-dom\"\n\nexport const Core = ({item}) => {\n    const {coreScale, coreDetail, touchZone, clickCore} = item\n    const nav = useNavigate()\n    const handleClick = (e) => clickCore(e, nav)\n    return <Sphere\n        name={'core'}\n        clickHandler={handleClick}\n        color={orange}\n        scale={[...coreScale]}\n        detail={coreDetail}\n        touchZone={touchZone}\n    />\n}","import React from \"react\"\nimport {blue} from \"@material-ui/core/colors\"\nimport {useNavigate} from \"react-router-dom\"\nimport {useUpdate} from \"react-three-fiber\"\nimport {inject, observer} from \"mobx-react\"\nimport {DoubleSide} from \"three\"\nimport {Core} from \"../components/Core\"\nimport Name from \"../components/Name\"\n\n\nconst ParentComponent = ({root: {aline}, children, item}) => {\n    const {init} = item\n    const mesh = useUpdate((mesh) => init(mesh), [])\n\n    const {clickHandler} = item\n    const nav = useNavigate()\n    const handleClick = (e) => clickHandler(e, nav)\n\n    const {hovered, active, toggleHover, torScale, torDetail} = item\n    return <>\n        <group ref={mesh}>\n            <mesh\n                scale={torScale}\n                name={'tor'}\n                onPointerOver={toggleHover}\n                onPointerOut={toggleHover}\n                onClick={handleClick}\n                visible={aline !== 'VerticalTop'}\n            >\n                <torusBufferGeometry args={[0.25, 0.25, torDetail, torDetail]}/>\n                <meshLambertMaterial\n                    side={DoubleSide}\n                    emissive={blue[900]}\n                    wireframe\n                    doubleSided={true}\n                    opacity={hovered || active ? 0.14 : 0.2}\n                    transparent={true}\n                />\n            </mesh>\n            <Name item={item} clickHandler={handleClick}/>\n            <Core item={item}/>\n        </group>\n        {children}\n    </>\n}\nexport const Parent = inject('root')(observer(ParentComponent))","import React from 'react'\nimport {inject, observer} from 'mobx-react'\nimport {useFrame} from \"react-three-fiber\"\n\nconst AnimationController = ({root: {viewport}, item, children}) => {\n    const {axisAnimate, rotateAxis, rotateOrbit} = item\n    const {speed} = viewport\n\n    useFrame(({invalidate}) => {\n        rotateOrbit()\n        axisAnimate && rotateAxis()\n        speed && invalidate()\n    })\n    return <>{children}</>\n}\n\nexport default inject(\"root\")(observer(AnimationController))","import React from 'react'\nimport {Route, Routes} from 'react-router-dom'\nimport {inject, observer} from \"mobx-react\"\nimport {Stars} from \"@react-three/drei\"\nimport {Item} from \"./containers/Item\"\nimport Camera from \"./components/Camera\"\nimport {Entity} from \"./views/Entity\"\nimport {Parent} from \"./containers/Parent\"\nimport AnimationController from \"./controllers/AnimationController\"\n\n\nconst App = ({root: {entity}}) => {\n    const routesGenerator = item => <React.Fragment key={item.id}>\n        <Route exact path={item.fullPath} element={<Entity item={item}/>}/>\n        {item.child.map(item => routesGenerator(item))}\n    </React.Fragment>\n\n    const itemGenerator = (entity) => {\n        const {child, id, core} = entity\n        return (\n            <group key={id} name={entity.name}>\n                <AnimationController item={entity}>\n                    {core ?\n                        <Parent item={entity}>\n                            {core && child.map(item => itemGenerator(item))}\n                        </Parent>\n                        :\n                        <Item item={entity}/>\n                    }\n                </AnimationController>\n            </group>\n        )\n    }\n    return <>\n        <Camera/>\n        <Stars radius={100} factor={2} fade/>\n        {itemGenerator(entity)}\n        <Routes basename=\"/4dide\">\n            {routesGenerator(entity)}\n        </Routes>\n    </>\n}\nexport default inject(\"root\")(observer(App))","import {createMuiTheme} from '@material-ui/core/styles';\nimport {grey} from \"@material-ui/core/colors\"\n\nexport default createMuiTheme({\n    palette: {\n        type: \"dark\",\n        primary: {\n            light: grey[50],\n            main: grey[200],\n            dark: grey[400],\n            contrastText: '#004c3f',\n        },\n        secondary: {\n            light: '#ffa270',\n            main: '#ff7043',\n            dark: '#c63f17',\n            contrastText: '#fafafa',\n        },\n        text: {\n            primary: \"#ffffff\",\n            secondary: \"#ffffff\"\n        }\n    },\n})\n","import { useSnackbar, VariantType, WithSnackbarProps } from 'notistack'\nimport * as React from 'react'\n\ninterface IProps {\n    setUseSnackbarRef: (showSnackbar: WithSnackbarProps) => void\n}\n\nconst InnerSnackbarUtilsConfigurator: React.FC<IProps> = (props: IProps) => {\n    props.setUseSnackbarRef(useSnackbar())\n    return null\n}\n\nlet useSnackbarRef: WithSnackbarProps\nconst setUseSnackbarRef = (useSnackbarRefProp: WithSnackbarProps) => {\n    useSnackbarRef = useSnackbarRefProp\n}\n\nexport const SnackbarUtilsConfigurator = () => {\n    return (\n        <InnerSnackbarUtilsConfigurator setUseSnackbarRef={setUseSnackbarRef} />\n    )\n}\n\nexport default {\n    success(msg: string) {\n        this.toast(msg, 'success')\n    },\n    warning(msg: string) {\n        this.toast(msg, 'warning')\n    },\n    info(msg: string) {\n        this.toast(msg, 'info')\n    },\n    error(msg: string) {\n        this.toast(msg, 'error')\n    },\n    toast(msg: string, variant: VariantType = 'default') {\n        useSnackbarRef.enqueueSnackbar(msg, { variant })\n    }\n}\n","import {Canvas} from \"react-three-fiber\"\nimport React from \"react\"\nimport {observer} from \"mobx-react\"\n\nexport const Canva = observer(({children}) => {\n    return <>\n        <Canvas\n            style={{height: \"100%\", width: \"100%\"}}\n            pixelRatio={window.devicePixelRatio}\n            invalidateFrameloop\n        >\n            {children}\n        </Canvas>\n    </>\n})","export default {\n    root: `${process.env.REACT_APP_HOST}/api`,\n    get items() {\n        return `${this.root}/items`\n    },\n    get coreIp(){\n        return `${this.root}/core_ip`\n    }\n}\n","import API from \"../../../../request/API\"\n\nexport default {\n    get root() {\n      return `${API.root}/auth`\n    },\n    get token(){\n        return `${this.root}/token`\n    },\n    get join(){\n        return `${this.root}/join`\n    },\n    get login(){\n        return `${this.root}/login`\n    },\n}\n","import api from \"./api\"\n\nexport default (data) => {\n    return fetch(api.join, {\n        headers: {'Content-Type': 'application/json'},\n        method: 'POST',\n        mode: \"cors\",\n        body: JSON.stringify(data)\n    })\n        .then(response => response.json())\n        .then(res => res.error ? Promise.reject(res.error) : res)\n        .catch((e) => {\n            if (typeof e === \"string\") return Promise.reject(e)\n            return Promise.reject('Что-то пошло не так! Попробуйте позже.')\n        })\n}","import api from \"./api\"\n\nexport default (headers) => fetch(api.login, {headers: headers})\n    .then(response => response.json())\n    .then(res => res.error ? Promise.reject(res.error) : res)\n    .catch((e) => {\n        if (typeof e === \"string\") return Promise.reject(e)\n        return Promise.reject('Что-то пошло не так! Попробуйте позже.')\n    })","import loginFetch from \"./loginFetch\"\nconst base64 = require('base-64')\n\n\nexport default (login, password) => {\n    const headers = new Headers()\n    headers.append(\"Authorization\", \"Basic \" + base64.encode(`${login}:${password}`))\n    return loginFetch(headers)\n}","const base64 = require('base-64')\n\nexport default () => {\n    const headers = new Headers()\n    const token = localStorage.getItem('token')\n    headers.append(\"Authorization\", \"Basic \" + base64.encode(`${token}:`))\n    headers.append('Content-Type', 'application/json')\n    return headers\n}","import header from \"../utils/headerWithToken\"\nimport loginFetch from \"./loginFetch\"\n\nexport default () => {\n    const headers = header()\n    return loginFetch(headers)\n}","import userModel from \"../models/userModel\"\n\nexport default userModel.create({})","import {applySnapshot, flow, types} from \"mobx-state-tree\"\nimport join from \"../request/api/join\"\nimport loginPassword from \"../request/api/loginPassword\"\nimport loginToken from \"../request/api/loginToken\"\n\nconst preprocessor = (snapshot) => {\n    return {id: snapshot.id, phone: snapshot.login}\n}\nexport default types\n    .model({\n        id: types.maybe(types.number),\n        phone: types.maybe(types.string),\n    })\n    .preProcessSnapshot(preprocessor)\n    .volatile(self => ({\n        loading: false,\n        password: types.maybe(types.string),\n    }))\n    .actions(self => ({\n        afterCreate() {\n            self.tokenStore && self.reLogin()\n        },\n        setPhone(phone) {\n            self.phone = phone\n        },\n        setPassword(password) {\n            self.password = password\n        },\n        toggleLoading() {\n            self.loading = !self.loading\n        },\n        login: flow(function* (phone, password) {\n            self.toggleLoading()\n            try {\n                const data = yield loginPassword(phone, password)\n                const {user, token, expiration} = data\n                applySnapshot(self, user)\n                self.setToken(token)\n                self.setExpiration(expiration)\n                self.toggleLoading()\n            } catch (e) {\n                self.toggleLoading()\n                return Promise.reject(e)\n            }\n        }),\n        reLogin: flow(function* () {\n            self.toggleLoading()\n            try {\n                const data = yield loginToken()\n                const {user, token, expiration} = data\n                applySnapshot(self, user)\n                self.setToken(token)\n                self.setExpiration(expiration)\n                self.toggleLoading()\n            } catch (e) {\n                self.toggleLoading()\n                return Promise.reject(e)\n            }\n        }),\n        join: flow(function* (login, password) {\n            self.toggleLoading()\n            try {\n                const data = yield join({login: login, password: password})\n                console.log(data)\n                const {user, token, expiration} = data\n                applySnapshot(self, user)\n                self.setToken(token)\n                self.setExpiration(expiration)\n                self.toggleLoading()\n            } catch (e) {\n                console.log(e)\n                self.toggleLoading()\n                return Promise.reject(e)\n            }\n        }),\n        logOut() {\n            self.setPhone('')\n            self.setPassword('')\n            self.removeToken()\n            self.removeExpiration()\n        },\n        setToken(token) {\n            localStorage.setItem('token', token)\n        },\n        removeToken() {\n            localStorage.removeItem('token')\n        },\n        setExpiration(expiration) {\n            localStorage.setItem('expiration', expiration)\n        },\n        removeExpiration() {\n            localStorage.removeItem('expiration')\n        },\n    }))\n    .views(self => ({\n        get tokenStore() {\n            return localStorage.getItem('token')\n        },\n        get expirationStore() {\n            return localStorage.getItem('expiration')\n        },\n        get isAuthenticated() {\n            return !!(self.phone && self.tokenStore)\n        },\n    }))","import {getRoot, types} from \"mobx-state-tree\"\nimport {MathUtils, Vector3} from \"three\"\n\nexport default types\n    .model({})\n    .volatile(self => ({\n        aline: types.enumeration('aline', [\"VerticalTop\", \"scattering\"]),\n        fly: false\n    }))\n    .actions(self => {\n        const root = getRoot(self)\n        return {\n            afterCreate() {\n                this.setAline('VerticalTop')\n                root.setAline(\"VerticalTop\")\n            },\n            setFly(bool) {\n                self.fly = bool\n            },\n            setAline(typeAline) {\n                self.aline = typeAline\n            },\n            toggleAline() {\n                const {aline, setAline} = self\n                aline === 'scattering' ? setAline('VerticalTop') : setAline('scattering')\n            },\n            rotateOrbit() {\n                const {aline, scattering, verticalTop, mesh: {position}, distance} = self\n                const {x: parentX, y: parentY} = self['parentMeshPosition']\n                const rootAline = root.aline\n                switch (rootAline === aline ? aline : rootAline) {\n                    case 'scattering':\n                        position.x = parentX + distance * Math.sin(scattering)\n                        position.y = parentY + distance * Math.cos(scattering)\n                        root.orbitRotate && (self.alphaRotate += self['speedRotateOrbit'])\n                        break\n                    case 'VerticalTop':\n                        position.x = parentX + distance * Math.sin(verticalTop)\n                        position.y = parentY + distance * Math.cos(verticalTop)\n                        break\n                    default:\n                        console.log(aline)\n                }\n            },\n        }\n    })\n    .views(self => {\n        const root = getRoot(self)\n        return {\n            get scattering() {\n                const {sibling, count, alphaRotate} = self\n                const countOrbits = sibling.length ? sibling.length : 1\n                const deg = (360 / countOrbits * count) * alphaRotate\n                return MathUtils.degToRad(deg)\n            },\n            get speedRotateOrbit() {\n                const {level, count} = self\n                const {rootSpeed} = root\n                return (rootSpeed) * (level * 1 / count)\n            },\n            get verticalTop() {\n                return MathUtils.degToRad(180)\n            },\n            get distanceCamera() {\n                const {fov, aspect} = getRoot(self).viewport.camera.three\n                const distance = self['boundingBox'].x * 0.54 / Math.tan(MathUtils.degToRad(fov) * 0.5)\n                return aspect > 1 ? distance : distance / aspect\n            },\n            get distanceCameraVerticalTop() {\n                const {fov} = getRoot(self).viewport.camera.three\n                const {radius, core, is_root, boundingBox, diameter} = self\n                let visibleHeight\n                if (core) {\n                    visibleHeight = is_root ? (boundingBox.x * 0.5) + radius : (boundingBox.x * 0.54) + radius\n                } else\n                    visibleHeight = diameter\n                return visibleHeight * 0.5 / Math.tan(MathUtils.degToRad(fov) * 0.5)\n            },\n            get cameraV3() {\n                const {core, distanceCamera, distanceCameraVerticalTop, mesh: {position}} = self\n                switch (root.aline) {\n                    case \"scattering\":\n                        const {x, y} = position\n                        return new Vector3(x, y, distanceCamera)\n                    case 'VerticalTop':\n                        if (core) {\n                            const {radius, boundingBox} = self\n                            const visibleWidth = ((boundingBox.x * 0.5) + radius) * getRoot(self).viewport.camera.three.aspect\n                            const x = position.x + visibleWidth / 2 - radius\n                            const y = position.y - ((boundingBox.y * 0.5) - radius) / 2\n                            return new Vector3(x, y, distanceCameraVerticalTop)\n                        } else {\n                            const {x, y} = position\n                            return new Vector3(x, y, distanceCamera)\n                        }\n                    default:\n                        return new Vector3(0, 0, 0)\n                }\n\n            },\n\n        }\n    })","import {getRoot, types} from \"mobx-state-tree\"\n\nexport default types\n    .model({})\n    .volatile(self => ({\n        _axisAnimate: true\n    }))\n    .actions(self => {\n        const root = getRoot(self)\n        return {\n            rotateAxis() {\n                const {mesh: {children}} = self\n                const {rotation} = children[0]\n                root.orbitRotate && (rotation.z -= self['speedRotateAxis'])\n\n                if (root.orbitRotate && children.length > 2) {\n                    const item = children[2]\n                    item.rotation.z -= self['speedRotateAxis']\n                }\n            },\n            playAxis() {\n                self._axisAnimate = true\n            },\n            stopAxis() {\n                self._axisAnimate = false\n            }\n        }\n    })\n    .views(self => {\n        const root = getRoot(self)\n        return {\n            get speedRotateAxis() {\n                const {rootSpeed} = root\n                const {level, count} = self\n                return (rootSpeed * 10) * (1 + level / count)\n            },\n            get axisAnimate() {\n                const {speedRotateAxis, _axisAnimate} = self\n                return speedRotateAxis && _axisAnimate\n            }\n        }\n    })","import {getParent, getRoot, types} from \"mobx-state-tree\"\nimport orbitAnimation from \"./orbit\"\nimport axis from \"./axis\"\nimport {MathUtils} from \"three\"\n\n\nconst animation = types\n    .model({})\n    .volatile(self => ({\n        alphaRotate: 1,\n        speed: 1,\n    }))\n    .actions(self => ({\n        playAxisAllChild() {\n            const {child} = self\n            child.forEach(item => item.playAxis())\n        },\n        getVisibleHeight(z) {\n            const camera = getRoot(self).viewport.camera.three\n            let depth = z\n            // compensate for cameras not positioned at z=0\n            const cameraOffset = camera.position.z\n            if (depth < cameraOffset) depth -= cameraOffset\n            else depth += cameraOffset\n            // vertical fov in radians\n            const vFOV = MathUtils.degToRad(camera.fov)\n            // Math.abs to ensure the result is always positive\n            return 2 * Math.tan(vFOV * 0.5) * Math.abs(depth)\n        },\n        getVisibleWidth(z) {\n            const camera = getRoot(self).viewport.camera.three\n            return this.getVisibleHeight(z) * camera.aspect\n        }\n    }))\n    .views(self => ({\n        get visibleHeight() {\n            return self['getVisibleHeight'](this.position[2])\n        },\n        get visibleWidth() {\n            return self['getVisibleWidth'](this.position[2])\n        },\n        get percentVisible() {\n            const {aspect} = getRoot(self).viewport.camera.three\n            const percent = (orient) => (self['boundingBox'].x / (self[orient] / 100)).toFixed(2)\n            return aspect > 1 ? percent('visibleHeight') : percent('visibleWidth')\n        },\n        get isFold() {\n            const {is_root} = self\n            return is_root ? false : !!getParent(self, 2).child.find(item => item.core)\n        },\n        get cameraPositionEqual() {\n            const {cameraV3, level, is_root} = self\n            const {viewport: {camera: {three}}} = getRoot(self)\n            if (typeof three !== \"undefined\") {\n                const {position} = three\n                const fixed = level\n                if (is_root)\n                    return (position.z.toFixed(fixed) === cameraV3.z.toFixed(fixed))\n                else\n                    return (position.z.toFixed(fixed) === cameraV3.z.toFixed(fixed)\n                        && position.x.toFixed(fixed) === cameraV3.x.toFixed(fixed)\n                        && position.y.toFixed(fixed) === cameraV3.y.toFixed(fixed)\n                    )\n            } else return false\n        },\n    }))\nexport default types.compose(animation, orbitAnimation, axis)","export const arrX = num => [num, 0, 0]\nexport const arr = num => [num, num, num]\n","import {types} from \"mobx-state-tree\"\nimport {arr} from \"../../utils/arr\"\n\nexport default types\n    .model({\n        paddingSphere: 4\n    })\n    .actions(self => ({}))\n    .views(self => ({\n        get core() {\n            return !!self['child'].length\n        },\n        get coreScale() {\n            const {level, paddingSphere} = self\n            const scale = 1 / level\n            return arr(scale - (scale / 100 * paddingSphere))\n        },\n        get coreDetail() {\n            return 6\n        }\n    }))","import {types} from \"mobx-state-tree\"\n\nexport default types\n    .model({})\n    .actions(self => ({\n        getFullDiameter(core_item) {\n            let diameters = 0\n            const {child, diameter, is_root} = core_item\n            child.forEach(item => {\n                diameters += item.diameter\n                item.core && (diameters += this.getFullDiameter(item))\n            })\n            return is_root ? diameters * 2 - diameter : diameters * 2 + diameter\n        },\n        getFullDiameterVerticalTop(core_item) {\n            let diameters = 0\n            const {child, diameter, is_root} = core_item\n            child.forEach(item => {\n                diameters += item.diameter\n                item.core && (diameters += this.getFullDiameterVerticalTop(item) / 2)\n            })\n            return is_root ? diameters * 2 : diameters * 2 + diameter\n        }\n    }))\n    .views(self => ({\n        get torScale() {\n            const {core, aline, getFullDiameter, getFullDiameterVerticalTop} = self\n            if (core) {\n                const size = aline === 'VerticalTop' ? getFullDiameterVerticalTop(self) : getFullDiameter(self)\n                return [size, size, size]\n            }\n            return undefined\n        },\n        get torDetail() {\n            const {level} = self\n            return 2 / level * 20\n        }\n    }))","import {getParent, types} from \"mobx-state-tree\"\nimport {Vector3} from \"three\"\n\nexport default types\n    .model({})\n    .views(self => {\n        const parent = self['is_root'] ? undefined : getParent(self, 2)\n        return {\n            get parentMeshPosition() {\n                const {is_root} = self\n                return is_root ? new Vector3(0, 0, 0) : parent.mesh.position\n            },\n            get parentRadius() {\n                const {level} = self\n                const parentDiameter = 1 / (level - 1)\n                return parentDiameter / 2\n            },\n            get parentScale() {\n                const {is_root} = self\n                return is_root ? 1 : parent.coreScale[0]\n            },\n            get parentPosition() {\n                const {is_root} = self\n                return is_root ? 0 : parent.position[0]\n            },\n            get sibling() {\n                const {is_root} = self\n                return (is_root || typeof parent.child === \"undefined\") ? [] : parent.child\n            },\n            get childDiameters() {\n                let childR = 0\n                self['child'].forEach(item => childR += item.diameter)\n                return childR\n            },\n        }\n    })","import {getRoot, types} from \"mobx-state-tree\"\n\nexport default types\n    .model({})\n    .volatile(self => ({\n        active: false,\n        hovered: false,\n        touchDebug: false\n    }))\n    .actions(self => ({\n        setActive(bool) {\n            const {level} = self\n            self.active = bool\n            bool ? getRoot(self).setCurrentLevel(level) : getRoot(self).setPrevLevel(level)\n        },\n        toggleHover() {\n            self.hovered = !self.hovered\n        },\n        isTarget(event, target) {\n            return !!event.intersections.filter(item => item.eventObject.name === target).length\n        },\n        clickItem(e, nav) {\n            e.stopPropagation()\n            const {axisAnimate, stopAxis, fullPath, active, touchDebug} = self\n            touchDebug && console.log('item click', fullPath)\n            axisAnimate && stopAxis()\n            !active && nav(fullPath)\n        },\n        clickCore(e, nav) {\n            e.stopPropagation()\n            const {is_root, directionBeforeEnter, toggleAline, active, touchDebug, fullPath, child} = self\n            switch (directionBeforeEnter) {\n                case 'up':\n                    if (!active) {\n                        touchDebug && console.log(\"core click\", directionBeforeEnter)\n                        nav(fullPath)\n                        is_root && child.forEach(item => item.nameScaleUpChild())\n                        // console.log(directionBeforeEnter, 'prevLevel', getRoot(self).prevLevel, 'currentLevel', getRoot(self).currentLevel, 'level', level)\n                    } else if (is_root){\n                        toggleAline()\n                        console.log(\"core click\", directionBeforeEnter)\n                        touchDebug && console.log(\"notAction\", \"core click\", directionBeforeEnter)\n                    }\n                    break\n                case 'down':\n                    if (!active) {\n                        // console.log(\"core click\", directionBeforeEnter)\n                        touchDebug && console.log(\"core click\", directionBeforeEnter)\n                        nav(fullPath)\n                    } else if (is_root) {\n                        touchDebug && console.log('core root toggle visible')\n                        console.log(\"core click\", directionBeforeEnter)\n                    }\n                    break\n                default:\n                    touchDebug && console.log('core click', directionBeforeEnter)\n                    break\n            }\n        },\n        clickTor(e, nav) {\n            const {child, directionBeforeEnter, is_root, level, touchDebug, fullPath} = self\n            // console.log(directionBeforeEnter, self.id, self.fullPath)\n            switch (directionBeforeEnter) {\n                case 'up' :\n                    const isExitFromItem = getRoot(self).currentLevel - level === 1\n                    const isExitFromSelf = getRoot(self).currentLevel === level\n                    // isExitFromItem && e.stopPropagation()\n                    // console.log(directionBeforeEnter, 'prevLevel', getRoot(self).prevLevel, 'currentLevel', getRoot(self).currentLevel, 'level', level, 'isExitFromItem', isExitFromItem)\n                    child.forEach(item => item.nameScaleUpChild())\n                    if (!is_root && isExitFromSelf) {\n                        touchDebug && console.log(\"tor click\", directionBeforeEnter, 'self tor')\n                        nav('../')\n                    } else if (!is_root && isExitFromItem) {\n                        touchDebug && console.log(\"tor click\", directionBeforeEnter, 'self tor')\n                        nav(fullPath)\n                    }\n                    break\n                case 'down':\n                    touchDebug && console.log(\"tor click\", directionBeforeEnter, 'self tor')\n                    nav(fullPath)\n                    break\n                default:\n                    touchDebug && console.log('tor click', directionBeforeEnter, 'item.level:', level, 'currentLevel:', getRoot(self).currentLevel)\n                    break\n            }\n        },\n        clickHandler(e, nav) {\n            const {isTarget, touchDebug} = self\n            if (!isTarget(e, 'core') && !isTarget(e, 'item'))\n                this.clickTor(e, nav)\n            else if (touchDebug) {\n                // const {directionBeforeEnter, level} = self\n                // const {currentLevel} = getRoot(self)\n                // console.log(\"isItemClick:\", isTarget(e, 'item'), directionBeforeEnter, 'item.level:', level, 'currentLevel:', currentLevel)\n            }\n        }\n    }))\n    .views(self => ({\n        get directionBeforeEnter() {\n            return getRoot(self).currentLevel - self['level'] >= 0 ? 'up' : 'down'\n        },\n        get touchZone() {\n            const {currentLevel} = getRoot(self)\n            const {core, level, isFold} = self\n            const k = 3\n\n            if (core)\n                return [0, 0, 0]\n            else if (level === currentLevel)\n                return [0, 0, 0]\n            else if (!isFold && Math.abs(level - currentLevel) === 1) {\n                return [0, 0, 0]\n            } else\n                return [k, k, k]\n        },\n    }))","import {types} from \"mobx-state-tree\"\nimport {Vector3} from \"three\"\n\nexport default types\n    .model({\n        colorName: 'white',\n        nameAnchorX: 'left',\n        nameAnchorY: \"middle\",\n    })\n    .volatile(self => ({\n        nameInitWidth: 0,\n        nameInitHeight: 0\n    }))\n    .actions(self => ({\n        initName(text) {\n            const {core, nameScaleUpChild} = self\n            self.nameInitWidth = text.geometry.boundingBox.max.x - text.geometry.boundingBox.min.x\n            self.nameInitHeight = text.geometry.boundingBox.max.y - text.geometry.boundingBox.min.y\n            core && nameScaleUpChild()\n        },\n        setNameAnchorX(aline) {\n            self.nameAnchorX = aline\n        },\n        setNameAnchorY(aline) {\n            self.nameAnchorY = aline\n        },\n        namePositionRight(item) {\n            const {nameInitPosition, visibleWidth, nameInitWidth, diameter, nameHeightMaxScale, name3d} = item\n            const emptyWidth = visibleWidth - diameter\n            const scaleWidth = emptyWidth / nameInitWidth * 0.8\n            const scale = scaleWidth > nameHeightMaxScale ? nameHeightMaxScale : scaleWidth\n            name3d.position.lerp(new Vector3(...nameInitPosition), 0.2)\n            name3d.scale.lerp(new Vector3(scale, scale, scale), 0.6)\n        },\n        moveNameToEntity() {\n            const {fly, name3d, nameWidth, level} = self\n            if (typeof nameWidth !== 'undefined' && fly) {\n                const k = level * 4\n\n                const x = -nameWidth / 2 / k\n                const y = 1 / level / 2\n                name3d.position.lerp(new Vector3(x, y, 0), 0.2)\n\n                const scale = 1 / k\n                name3d.scale.lerp(new Vector3(scale, scale, scale), 0.2)\n            }\n        },\n        moveNameToCore() {\n            const {name3d, diameter, visibleWidth, nameInitWidth} = self\n            const emptyWidth = visibleWidth - diameter\n            if (diameter > emptyWidth) {\n                const {cameraV3, getVisibleWidth, radius} = self\n                const visibleWidth = getVisibleWidth(radius)\n                const x = cameraV3.x - visibleWidth / 2\n                name3d.position.lerp(new Vector3(x, 0, radius), 0.2)\n\n                const scale = visibleWidth / nameInitWidth\n                name3d.scale.lerp(new Vector3(scale, scale, scale), 0.6)\n            } else {\n                this.namePositionRight(self)\n            }\n            this.nameScalePositionChilds()\n        },\n        nameScalePositionChilds() {\n            const {namePositionRight} = self\n            self.child.forEach(item => namePositionRight(item))\n        },\n        nameScaleUpChild() {\n            self.child.forEach(item => {\n                let start = Date.now()\n                const animate = timestamp => {\n                    let interval = Date.now() - start\n                    this.namePositionRight(item)\n                    if (interval < 1000) requestAnimationFrame(animate)\n                }\n                requestAnimationFrame(animate)\n            })\n        },\n        moveNameUp() {\n            let start = Date.now();\n            // const {name3d, nameInitPosition} = self\n            const animate = timestamp => {\n                let interval = Date.now() - start\n\n\n                this.namePositionRight(self)\n\n                // name3d.position.lerp(new Vector3(...nameInitPosition), 0.2)\n                // const scale = 1\n                // name3d.scale.lerp(new Vector3(scale, scale, scale), 0.2)\n\n                if (interval < 1000) requestAnimationFrame(animate)\n            }\n\n            requestAnimationFrame(animate)\n        },\n    }))\n    .views(self => {\n        return {\n            get name3d() {\n                const {mesh} = self\n                return mesh.children.find(item => item.name === 'nameText')\n            },\n            get nameInitPosition() {\n                const {radius} = self\n                return [radius, 0, 0]\n            },\n            get nameHeightMaxScale() {\n                const {diameter, nameInitHeight} = self\n                return diameter / nameInitHeight\n            },\n            get nameWidth() {\n                const {geometry} = this.name3d\n                const {boundingBox: {max, min}} = geometry\n                geometry.computeBoundingBox()\n                if (max.x === -Infinity)\n                    return undefined\n                return (max.x - min.x)\n            }\n        }\n    })","import {getRoot, types} from \"mobx-state-tree\"\n\nexport default types\n    .model({})\n    .views(self => ({\n        get directionFly() {\n            return getRoot(self).prevLevel >= getRoot(self).currentLevel ? 'down' : 'up'\n        },\n    }))","import {types} from \"mobx-state-tree\"\nimport {arrX} from \"../../utils/arr\"\n\nexport default types\n    .model({}).views(self => ({\n        get scatteringPosition() {\n            const {radius, is_root, core, parentPosition, parentRadius, childDiameters} = self\n            let parentOffset = parentPosition + parentRadius\n            if (is_root)\n                return arrX(0)\n            else if (core && this.count === 1)\n                return arrX(parentOffset + radius + childDiameters)\n            else if (core)\n                return arrX(parentOffset + this.scatteringDiametersSiblingUp + childDiameters)\n            else if (!core && this.count === 1)\n                return arrX(parentOffset + radius)\n            else\n                return arrX(parentOffset + this.scatteringDiametersSiblingUp)\n        },\n        get scatteringDiametersSiblingUp() {\n            const {sibling} = self\n            let distance = 0\n            sibling.forEach(item => {\n                if (item.count < this.count && item.core) {\n                    distance += (item.radius + item.childDiameters) * 2\n                } else if (item.count < this.count) {\n                    distance += item.diameter\n                }\n            })\n            return distance + this.radius\n        },\n    }))","import {types} from \"mobx-state-tree\"\nimport {arrX} from \"../../utils/arr\"\n\nexport default types\n    .model({})\n    .views(self => ({\n        get verticalTopPosition() {\n            const {radius, count, is_root, core, parentPosition, parentRadius} = self\n            let parentOffset = parentPosition + parentRadius\n            if (is_root)\n                return arrX(0)\n            else if (count === 1)\n                return arrX(parentOffset + radius)\n            else if (core)\n                return arrX(parentOffset + this.verticalTopDiametersSiblingUp)\n            else\n                return arrX(parentOffset + this.verticalTopDiametersSiblingUp)\n        },\n        get verticalTopDiametersSiblingUp() {\n            const {sibling} = self\n            let distance = 0\n            sibling.forEach(item => {\n                if (item.count < this.count && item.core) {\n                    distance += item.childDiameters + item.diameter\n                } else if (item.count < this.count) {\n                    distance += item.diameter\n                }\n            })\n            return distance + this.radius\n        },\n    }))","import {getParent, types} from \"mobx-state-tree\"\nimport {Vector3} from \"three\"\nimport animation from \"./animations/animation\"\nimport core from \"./parent/core\"\nimport tor from \"./parent/tor\"\nimport parent from \"./parent/parent\"\nimport touch from \"./touch\"\nimport name from \"./name/name\"\nimport navigate from \"./navigate\"\nimport scattering from \"./views/scattering\"\nimport verticalTop from \"./views/verticalTop\"\n\nconst entity = types.compose(\n    types.model({\n        id: types.string,\n        name: types.string,\n        child: types.array(types.late(() => entity)),\n        fullPath: types.string,\n    })\n        .volatile(self => ({mesh: {}}))\n        .actions(self => ({\n            init(mesh) {\n                self.mesh = mesh\n            },\n        }))\n        .views(self => ({\n            get is_root() {\n                return self['fullPath'] === '/'\n            },\n            get level() {\n                return self['root'] ? 1 : self['id'].split('.').length\n            },\n            get count() {\n                const idxes = self['id'].split('.')\n                return parseInt(idxes[idxes.length - 1])\n            },\n            get position() {\n                const {aline, verticalTopPosition, scatteringPosition} = self\n                return aline === 'VerticalTop' ? verticalTopPosition : scatteringPosition\n            },\n            get diameter() {\n                return 1 / this.level\n            },\n            get radius() {\n                return this.diameter * 0.5\n            },\n            get siblingUp() {\n                const {id} = self\n                const lastDigit = parseInt(id[id.length - 1])\n                const siblingId = id.substring(0, id.length - 1) + (lastDigit - 1).toString()\n                return getParent(self, 2).child.find(item => item.id === siblingId)\n            },\n            get siblingDown() {\n                const {id} = self\n                const lastDigit = parseInt(id[id.length - 1])\n                const siblingId = id.substring(0, id.length - 1) + (lastDigit + 1).toString()\n                return getParent(self, 2).child.find(item => item.id === siblingId)\n            },\n            get boundingBox() {\n                const {geometry, scale} = self['mesh'].children[0]\n                geometry.computeBoundingBox()\n\n                const {boundingBox: {max, min}} = geometry\n                const width = Math.abs(max.x) + Math.abs(min.x)\n                const height = Math.abs(max.y) + Math.abs(min.y)\n                const depth = Math.abs(max.z) + Math.abs(min.z)\n\n                const {x, y, z} = scale\n                return {x: width * x, y: height * y, z: depth * z}\n            },\n            get vector3() {\n                return new Vector3(...this.position)\n            },\n            get distance() {\n                const {is_root, position, parentPosition} = self\n                return is_root ? position[0] : position[0] - parentPosition\n            },\n        }))\n    ,\n    parent,\n    core,\n    tor,\n    scattering,\n    verticalTop,\n    name,\n    animation,\n    touch,\n    navigate\n)\nexport default entity","import {types} from \"mobx-state-tree\"\n\nexport default types\n    .model({\n        x: 0.0,\n        y: 0.0,\n        z: 0.0\n    })\n    .actions(self => ({\n        setPosition(x, y, z) {\n            self.x = x\n            self.y = y\n            self.z = z\n        }\n    }))","import {types} from \"mobx-state-tree\"\nimport v3 from \"../utils/v3\"\nimport {Vector3, Euler} from \"three\"\n\n\nconst cameraModel = types\n    .model({\n        position: v3,\n        rotation: v3,\n        fov: 75\n    })\n    .volatile(self => ({\n        three: undefined,\n    }))\n    .actions(self => ({\n        afterCreate() {\n        },\n        init(three) {\n            self.three = three\n        },\n    }))\n    .views(self => ({\n        get positionV3() {\n            const {position: {x, y, z}} = self\n            return new Vector3(x, y, z)\n        },\n        get rotationV3() {\n            const {three} = self\n            const {rotation: {x, y, z}} = self\n            return typeof three !== \"undefined\" ? three.rotation : new Euler(x, y, z)\n        }\n    }))\nexport default cameraModel","import {types} from \"mobx-state-tree\"\nimport cameraModel from \"./cameraModel\"\n\nexport default types\n    .model({\n        camera: cameraModel\n    })\n    .volatile(self => ({\n        width: 0.1\n    }))\n    .actions(self => ({\n        setWidth(float) {\n            self.width = float\n        }\n    }))\n    .views(self => ({}))","import {types} from \"mobx-state-tree\"\nimport entity from \"./entity/entity\"\nimport viewportModel from \"./viewport/viewportModel\"\n\n\nexport default types\n    .model({\n        entity: entity,\n        viewport: viewportModel,\n        brightness: 4,\n        orbitRotate: false,\n        speed: 1,\n        aline: ''\n    })\n    .volatile(self => ({\n        prevLevel: 0,\n        currentLevel: 1,\n    }))\n    .actions(self => ({\n        setCurrentLevel(level) {\n            self.currentLevel = level\n        },\n        setPrevLevel() {\n            self.prevLevel = self.currentLevel\n        },\n        setAline(typeAline) {\n            self.aline = typeAline\n        },\n        incrementSpeed() {\n            self.speed += 1\n        },\n        decrementSpeed() {\n            self.speed -= 1\n        },\n        toggleOrbitRotate() {\n            self.orbitRotate = !self.orbitRotate\n        },\n    }))\n    .views(self => ({\n        get rootSpeed() {\n            const {speed} = self\n            return (speed / 10000) * speed\n        }\n    }))\n","import entity from \"../models/entity/entity\"\n\n\nconst entityStore = entity.create({\n    id: '1',\n    name: 'Документация',\n    fullPath: '/4dide',\n    speed: 2,\n    child: [\n        {\n            id: '1.1',\n            name: 'Информация',\n            fullPath: '/4dide/info',\n            child: [\n                {\n                    id: '1.1.1',\n                    name: 'Правила безопасности',\n                    fullPath: '/4dide/info/safety_regulations',\n                    child: []\n                },\n                {\n                    id: '1.1.2',\n                    name: 'Работа с документацией',\n                    fullPath: '/4dide/info/work_with_the_documentation',\n                    child: []\n                },\n                {\n                    id: '1.1.3',\n                    name: 'Тип шилда',\n                    fullPath: '/4dide/info/shield_type',\n                    child: []\n                },\n                {\n                    id: '1.1.4',\n                    name: 'Сертификат',\n                    fullPath: '/4dide/info/certificate',\n                    child: []\n                },\n            ]\n        },\n        {\n            id: '1.2',\n            name: 'Установка',\n            fullPath: '/4dide/installation',\n            child: []\n        },\n        {\n            id: '1.3',\n            name: 'Эксплуатация',\n            fullPath: '/4dide/operation',\n            child: []\n        },\n        {\n            id: '1.4',\n            name: 'Обслуживание',\n            fullPath: '/4dide/service',\n            child: [\n                {\n                    id: '1.4.1',\n                    name: 'Личный кабинет',\n                    fullPath: '/4dide/service/1',\n                    child: []\n                },\n                {\n                    id: '1.4.2',\n                    name: 'Личный кабинет',\n                    fullPath: '/4dide/service/2',\n                    child: []\n                },\n                {\n                    id: '1.4.3',\n                    name: 'Личный кабинет',\n                    fullPath: '/4dide/service/3',\n                    child: []\n                },\n            ]\n        },\n        {\n            id: '1.5',\n            name: 'Детали',\n            fullPath: '/4dide/details',\n            child: []\n        },\n        {\n            id: '1.6',\n            name: 'Электрика',\n            fullPath: '/4dide/electric',\n            child: []\n        },\n        {\n            id: '1.7',\n            name: 'Смазка',\n            fullPath: '/4dide/7',\n            child: [\n                {\n                    id: '1.7.1',\n                    fullPath: '/4dide/7/1',\n                    name: 'Личный кабинет',\n                    child: []\n                },\n                {\n                    id: '1.7.2',\n                    fullPath: '/4dide/7/2',\n                    name: 'Личный кабинет',\n                    path: 'auth',\n                    child: []\n                },\n                {\n                    id: '1.7.3',\n                    fullPath: '/4dide/7/3',\n                    name: 'Личный кабинет',\n                    child: []\n                },\n                {\n                    id: '1.7.4',\n                    fullPath: '/4dide/7/4',\n                    name: 'Личный кабинет',\n                    child: []\n                }\n            ]\n        },\n    ]\n})\nexport default entityStore","import viewportModel from \"../models/viewport/viewportModel\"\n\nconst viewportStore = viewportModel.create({\n    camera: {\n        position: {x: 0, y: 40, z: 100},\n        rotation: {x: 0, y: 0, z: 0},\n        fov: 30\n    }\n})\nexport default viewportStore","import root from \"../models/root\"\nimport entityStore from \"./entityStore\"\nimport viewportStore from \"./viewportStore\"\nimport {addMiddleware} from \"mobx-state-tree\"\n\n\nconst rootStore = root\n    .create({\n        viewport: viewportStore,\n        entity: entityStore,\n        orbitRotate: true,\n        brightness: 4,\n        speed: 1\n    })\n\naddMiddleware(entityStore, (call, next) => {\n    const {name, args, context} = call\n    switch (name) {\n        case 'setAline':\n            const typeAline = args[0]\n            const {is_root} = context\n            if (is_root)\n                switch (typeAline) {\n                    case 'scattering':\n                        console.log('scattering')\n                        rootStore.setAline(\"scattering\")\n                        break\n                    case 'VerticalTop':\n                        console.log('VerticalTop')\n                        rootStore.setAline(\"VerticalTop\")\n                        break\n                    default:\n                        break\n                }\n            break\n        default:\n            break\n    }\n    // console.log(call)\n    return next(call)\n})\nexport default rootStore","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './theme/index.css'\nimport App from './App'\nimport {ThemeProvider as MuiThemeProvider} from '@material-ui/core/styles'\nimport theme from \"./theme/theme\"\nimport {SnackbarProvider} from \"notistack\"\nimport {SnackbarUtilsConfigurator} from \"./utils/SnackbarUtils\"\nimport {Canva} from \"./layout/Canva\"\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport {Provider} from \"mobx-react\"\nimport userStore from \"./features/secure/stores/userStore\"\nimport rootStore from \"./stores/rootStore\"\n\nReactDOM.render(\n    <>\n        <MuiThemeProvider theme={theme}>\n            <SnackbarProvider anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}>\n                <SnackbarUtilsConfigurator/>\n                <Canva>\n                    <Router>\n                        <Provider user={userStore} root={rootStore}>\n                            <App/>\n                        </Provider>\n                    </Router>\n                </Canva>\n            </SnackbarProvider>\n        </MuiThemeProvider>\n    </>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}